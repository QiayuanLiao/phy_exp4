#!/usr/bin/env python
PACKAGE = "phy_exp4"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# HSV
gen.add("h_max", int_t, 0, "h_max", 255, 0, 255)
gen.add("h_min", int_t, 0, "h_min", 0, 0, 255)
gen.add("s_max", int_t, 0, "s_max", 255, 0, 255)
gen.add("s_min", int_t, 0, "s_min", 0, 0, 255)
gen.add("v_max", int_t, 0, "v_max", 255, 0, 255)
gen.add("v_min", int_t, 0, "v_min", 0, 0, 255)

gen.add("roi_lu_x", int_t, 0, "roi_lu_x", 1, 1, 1280)
gen.add("roi_lu_y", int_t, 0, "roi_lu_y", 1, 1, 1024)
gen.add("roi_rd_x", int_t, 0, "roi_rd_x", 1279, 0, 1279)
gen.add("roi_rd_y", int_t, 0, "roi_rd_y", 1023, 0, 1023)

# Mor
gen.add("order", bool_t, 0, "Open before close if true", True)
gen.add("open_size", int_t, 0, "open_size", 1, 0, 10)
gen.add("close_size", int_t, 0, "close_size", 3, 0, 10)

gen.add("circles_param1", double_t, 0, "circles_param1", 100, 1, 300)
gen.add("circles_param2", double_t, 0, "circles_param2", 100, 1, 300)

gen.add("circles_min_r", int_t, 0, "circles_min_r", 0, 0, 500)
gen.add("circles_max_r", int_t, 0, "circles_max_r", 0, 0, 100)

exit(gen.generate(PACKAGE, "phy_exp4", "Process"))
